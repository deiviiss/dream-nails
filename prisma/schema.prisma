generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  password   String
  role       String    @default("customer")
  name       String    @default("Anonymous")
  created_at DateTime  @default(now())
  updated_at DateTime?
  expenses   Expense[]

  @@map("users")
}

model SalonService {
  id          Int       @id @default(autoincrement())
  category    String
  name        String
  description String
  price       Float
  created_at  DateTime  @default(now())
  updated_at  DateTime?

  @@map("salon_services")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  created_at  DateTime  @default(now())
  updated_at  DateTime?
  Expense     Expense[]

  @@map("categories")
}

model Image {
  id         Int       @id @default(autoincrement())
  url        String
  created_at DateTime  @default(now())
  updated_at DateTime?

  @@map("images")
}

model Place {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  created_at  DateTime  @default(now())
  updated_at  DateTime?
  expenses    Expense[]

  @@map("places")
}

model Expense {
  id            Int      @id @default(autoincrement())
  name          String
  amount        Float
  method        String
  expense_date  DateTime @default(now())
  expense_month Int      @default(12)
  with_relation Boolean  @default(false)
  is_reconciled Boolean  @default(false)

  place_id    Int
  place       Place    @relation(fields: [place_id], references: [id])
  category_id Int
  category    Category @relation(fields: [category_id], references: [id])
  user_id     Int
  user        User     @relation(fields: [user_id], references: [id])

  created_at DateTime  @default(now())
  updated_at DateTime?

  @@map("expenses")
}
